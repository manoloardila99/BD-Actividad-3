// Configuración Inicial
// Iniciar los Config Servers

mongod --configsvr --replSet configReplSet --bind_ip localhost --port 27019 --dbpath /data/configdb

// Iniciar los Shard Servers

mongod --shardsvr --replSet shardReplSet --bind_ip localhost --port 27018 --dbpath /data/sharddb

// Iniciar el Router (Mongos)

mongos --configdb configReplSet/localhost:27019,localhost:27020,localhost:27021 --bind_ip localhost --port 27017


// Configurar el Clúster de Sharding

mongo --host localhost --port 27017

// Configurar el Replica Set de los Config Servers

rs.initiate({
  _id: "configReplSet",
  configsvr: true,
  members: [
    { _id: 0, host: "localhost:27019" },
    { _id: 1, host: "localhost:27020" },
    { _id: 2, host: "localhost:27021" }
  ]
});

// Añadir los Shards al Clúster

sh.addShard("shardReplSet/localhost:27018");
sh.addShard("shardReplSet/localhost:27019");
sh.addShard("shardReplSet/localhost:27020");

// Habilitar el Sharding para la Base de Datos

sh.enableSharding("champions_league");

// Configurar las Claves de Fragmentación

sh.shardCollection("champions_league.deportistas", { "equipo_id": 1 });

// Colección "Partidos"

sh.shardCollection("champions_league.partidos", { "fecha_del_partido": 1 });

// Colección "Resultados"

sh.shardCollection("champions_league.resultados", { "partido_id": 1 });

// Comandos de Verificación
// Verificación del Particionamiento

sh.status();

// Distribución de Fragmentos

db.deportistas.getShardDistribution();
db.partidos.getShardDistribution();
db.resultados.getShardDistribution();

// Ver Información de los Shards Configurados

db.adminCommand({ listShards: 1 });

// Verificar el Balanceador

sh.getBalancerState();

sh.startBalancer();
sh.stopBalancer();

// Logs de Resultados Esperados
// Resultado del Comando sh.status()

--- Sharding Status ---
  sharding version: { _id: 1, clusterId: ObjectId("5feea4b9e6a6c5ad") }
  shards:
    {  _id: "shardReplSet1",  host: "shardReplSet1/localhost:27018" }
    {  _id: "shardReplSet2",  host: "shardReplSet2/localhost:27019" }
    {  _id: "shardReplSet3",  host: "shardReplSet3/localhost:27020" }
  active balancer: yes
  databases:
    champions_league:
      shard key: { equipo_id: 1 }
      chunks:
        shardReplSet1  25
        shardReplSet2  35
        shardReplSet3  40
      too many chunks to print, use sh.status(verbose: true) for full details

// Resultado del Comando db.deportistas.getShardDistribution()

Collection champions_league.deportistas is sharded.
Data is distributed across shards as follows:

Shard shardReplSet1:
  data size: 5MB
  documents: 5000

Shard shardReplSet2:
  data size: 6MB
  documents: 6000

Shard shardReplSet3:
  data size: 4MB
  documents: 4000

Totals:
  data size: 15MB
  documents: 15000

// Resultado del Comando db.adminCommand({ listShards: 1 })

{
  "shards": [
    { "_id": "shardReplSet1", "host": "shardReplSet1/localhost:27018" },
    { "_id": "shardReplSet2", "host": "shardReplSet2/localhost:27019" },
    { "_id": "shardReplSet3", "host": "shardReplSet3/localhost:27020" }
  ],
  "ok": 1
}

// Resultado del Balanceador

true

Balancer started at 2024-12-14T12:45:00Z
Moved 3 chunks from shardReplSet1 to shardReplSet3
